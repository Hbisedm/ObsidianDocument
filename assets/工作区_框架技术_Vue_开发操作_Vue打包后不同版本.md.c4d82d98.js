import{_ as s,c as n,o as a,a as l}from"./app.741d02cd.js";const m=JSON.parse('{"title":"Vue打包后不同版本的笔记","description":"","frontmatter":{"title":"Vue打包后不同版本的笔记","tags":["Vue"],"创建时间":"星期三, 七月 27日 2022, 8:58:57 晚上","修改时间":"星期四, 七月 28日 2022, 1:35:00 下午"},"headers":[{"level":2,"title":"疑惑","slug":"疑惑","link":"#疑惑","children":[]},{"level":2,"title":"runtime-compiler与runtimeonly的区别","slug":"runtime-compiler与runtimeonly的区别","link":"#runtime-compiler与runtimeonly的区别","children":[{"level":3,"title":"Runtimecompiler","slug":"runtimecompiler","link":"#runtimecompiler","children":[]},{"level":3,"title":"Runtimeonly","slug":"runtimeonly","link":"#runtimeonly","children":[]}]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"relativePath":"工作区/框架技术/Vue/开发操作/Vue打包后不同版本.md"}'),e={name:"工作区/框架技术/Vue/开发操作/Vue打包后不同版本.md"},p=l(`<p>#Vue</p><h1 id="vue打包后不同版本的笔记" tabindex="-1">Vue打包后不同版本的笔记 <a class="header-anchor" href="#vue打包后不同版本的笔记" aria-hidden="true">#</a></h1><blockquote><p>Vue打包后不同版本解析</p></blockquote><p><img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202206071611373.png" alt=""></p><blockquote><p>运行时+编译时 VS 仅运行时</p></blockquote><p><img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202206071616859.png" alt=""></p><h2 id="疑惑" tabindex="-1">疑惑 <a class="header-anchor" href="#疑惑" aria-hidden="true">#</a></h2><p>在使用Webpack打包vue时，默认使用<code>vue</code>引入</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createApp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createApp</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">&lt;h2&gt;Vue render {{title}} &lt;/h2&gt;</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      title</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello webpack vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mount</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><blockquote><p>webpack打包后，是看不到vue渲染出来的东西的。</p></blockquote><p>因为引入的<code>vue</code>版本是runtimeonly版本。需要改成runtime-compiler版本才可以渲染。 <strong>修改：</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createApp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue/dist/vue.esm-bundler</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="runtime-compiler与runtimeonly的区别" tabindex="-1">runtime-compiler与runtimeonly的区别 <a class="header-anchor" href="#runtime-compiler与runtimeonly的区别" aria-hidden="true">#</a></h2><ul><li>如果在之后的开发中，你依然使用template，就需要选择runtimecompiler</li><li>如果你之后的开发中，使用的是.vue文件开发，那么可以选择runtimeonly</li></ul><h3 id="runtimecompiler" tabindex="-1">Runtimecompiler <a class="header-anchor" href="#runtimecompiler" aria-hidden="true">#</a></h3><p>Vue中的模板如何最终渲染成真实DOM template -&gt; ast -&gt; render-&gt; vdom -&gt; UI</p><h3 id="runtimeonly" tabindex="-1">Runtimeonly <a class="header-anchor" href="#runtimeonly" aria-hidden="true">#</a></h3><p>Vue中的模板如何最终渲染成真实DOM render -&gt; vdom -&gt; UI</p><p>性能更高 代码量更少 那么.vue文件中的template是由谁处理的 是由vue-template-compiler</p><p><strong>runtime-only 更快的原因：</strong> runtime-only比runtime-compiler更快，因为它省略了vue内部过程中的第一个过程，如果是runtime-compiler那么main.js中就会出现template从而需要过程一导致增加了一个过程，同时增加了大小而 runtime-only 模式中不是没有写 template ，只是把 template 放在了.vue 的文件中了并有一个叫 vue-template-compiler的在开发依赖时将.vue文件中的 template 解析成 render 函数了因为是开发依赖，不在最后生产中，所以最后生产出来的运行的代码没有template。</p><p>下一步：不使用<code>&lt;template&gt;</code>这种方式，使用SFC的方式开发Vue</p><p>[[Webpack5配置Vue3-SFC]]</p><p>使用SFC的方式后就可以使用runtimeonly版本了!</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createApp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue/dist/vue.esm-bundler</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">=&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createApp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-hidden="true">#</a></h2><p><a href="https://blog.csdn.net/a1345954104/article/details/104987494" target="_blank" rel="noreferrer">区别</a></p>`,26),o=[p];function t(r,c,i,D,y,F){return a(),n("div",null,o)}const d=s(e,[["render",t]]);export{m as __pageData,d as default};
