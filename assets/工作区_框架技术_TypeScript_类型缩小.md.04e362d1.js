import{_ as e,c as t,o as i,a as o}from"./app.6426b36b.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"工作区/框架技术/TypeScript/类型缩小.md"}'),_={name:"工作区/框架技术/TypeScript/类型缩小.md"},l=o("<ul><li>类型缩小的英文是Type Narrowing</li><li>我们可以通过类似于<code>typeof padding === &#39;number&#39;</code>的判断语句，来改变TypeScript的执行路径；</li><li>在给定的执行路径中，我们可以缩小比声明时更小的类型，这个过程称之为 <strong>缩小</strong>；</li><li>而我们编写的<code>typeof padding === &#39;number&#39;</code>可以称之为类型保护(type guards)；</li></ul><p>常见的类型保护有：</p><ul><li>typeof</li><li>===、!==</li><li>instanceof</li><li>in</li><li>等等</li></ul>",3),r=[l];function a(n,c,p,s,d,u){return i(),t("div",null,r)}const T=e(_,[["render",a]]);export{m as __pageData,T as default};
