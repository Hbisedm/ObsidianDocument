import{_ as s,c as a,o as n,a as e}from"./app.e5db1f59.js";const y=JSON.parse('{"title":"打包入口的认知的笔记","description":"","frontmatter":{"title":"打包入口的认知的笔记","tags":["打包入口的认知"],"创建时间":"星期四, 十一月 3日 2022, 9:45:44 晚上","修改时间":"星期四, 十一月 3日 2022, 9:54:28 晚上"},"headers":[{"level":2,"title":"构建目标","slug":"构建目标","link":"#构建目标","children":[{"level":3,"title":"Webpack","slug":"webpack","link":"#webpack","children":[]},{"level":3,"title":"Rollup","slug":"rollup","link":"#rollup","children":[]},{"level":3,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}]}],"relativePath":"工作区/工程化/打包入口的认知.md"}'),l={name:"工作区/工程化/打包入口的认知.md"},o=e(`<p>#打包 #target</p><h1 id="打包入口的认知的笔记" tabindex="-1">打包入口的认知的笔记 <a class="header-anchor" href="#打包入口的认知的笔记" aria-hidden="true">#</a></h1><p><strong>在编写npm包后</strong>，需要打包成js供给server(node) 或者 clent(browser)使用我们编写的脚本。</p><p>那么引入第三方包时，使用它的js需要引入哪个环境的呢?</p><p>判断当前代码在哪个环境下使用的。</p><ul><li>node环境 将使用package.json#main or module</li><li>browser环境 将使用package.json#browser</li></ul><p>node环境 一般为cjs 或者esm 这2个模块化方式</p><p>commonjs模块化 将使用对应npm包的main esmodule模块化 将使用对应npm包的module</p><h2 id="构建目标" tabindex="-1">构建目标 <a class="header-anchor" href="#构建目标" aria-hidden="true">#</a></h2><h3 id="webpack" tabindex="-1">Webpack <a class="header-anchor" href="#webpack" aria-hidden="true">#</a></h3><p>webpack 能够为多种环境或 <em>target</em> 构建编译。想要理解什么是 <code>target</code> 的详细信息</p><p><code>target</code>告知 webpack 为目标(target)指定一个环境。默认值为 <code>&quot;browserslist&quot;</code>，如果没有找到 browserslist 的配置，则默认为 <code>&quot;web&quot;</code></p><h3 id="rollup" tabindex="-1">Rollup <a class="header-anchor" href="#rollup" aria-hidden="true">#</a></h3><p>output</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">output</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">format</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cjs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> pkg</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">main</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">format</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">es</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> pkg</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">module</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span></code></pre></div><h3 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-hidden="true">#</a></h3><p><a href="https://github.com/SunshowerC/blog/issues" target="_blank" rel="noreferrer">package.json 中 你还不清楚的 browser，module，main 字段优先级</a></p>`,17),p=[o];function t(r,c,i,d,D,F){return n(),a("div",null,p)}const h=s(l,[["render",t]]);export{y as __pageData,h as default};
