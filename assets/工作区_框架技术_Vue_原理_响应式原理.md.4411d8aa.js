import{_ as s,c as a,o as n,a as e}from"./app.0b159a37.js";const A=JSON.parse('{"title":"Proxy与Object.defineProperty","description":"","frontmatter":{"title":"Proxy与Object.defineProperty","tags":["Vue"],"excerpt":"Vue监听数据变化的原理","创建时间":"星期三, 七月 27日 2022, 8:58:57 晚上","修改时间":"星期五, 八月 26日 2022, 11:18:57 晚上"},"headers":[{"level":2,"title":"vue2","slug":"vue2","link":"#vue2","children":[{"level":3,"title":"初始化","slug":"初始化","link":"#初始化","children":[]}]},{"level":2,"title":"vue3","slug":"vue3","link":"#vue3","children":[]}],"relativePath":"工作区/框架技术/Vue/原理/响应式原理.md"}'),l={name:"工作区/框架技术/Vue/原理/响应式原理.md"},p=e(`<p>#响应式原理 #Vue</p><h1 id="proxy与object-defineproperty" tabindex="-1">Proxy与Object.defineProperty <a class="header-anchor" href="#proxy与object-defineproperty" aria-hidden="true">#</a></h1><p>Proxy的优势如下:</p><ul><li>Proxy可以直接监听对象而非属性</li><li>Proxy可以直接监听数组的变化</li><li>Proxy有多达13种拦截方法,不限于apply、ownKeys、deleteProperty、has等等是Object.defineProperty不具备的</li><li>Proxy返回的是一个新对象,我们可以只操作新的对象达到目的,而- Object.defineProperty只能遍历对象属性直接修改</li><li>Proxy作为新标准将受到浏览器厂商重点持续的性能优化，也就是传说中的新标准的性能红利</li></ul><p>Object.defineProperty的优势如下:</p><ul><li>兼容性好,支持IE9</li></ul><h2 id="vue2" tabindex="-1">vue2 <a class="header-anchor" href="#vue2" aria-hidden="true">#</a></h2><h3 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-hidden="true">#</a></h3><ol><li><code>observe(data)</code> 先对data的key(对象的话, 递归)进行<code>defineProperty</code><ol><li>对obj的key进行get、set</li><li>闭包dep(存储依赖的对象, 里面有个<code>subs[]</code> 用于存储依赖 )</li></ol></li><li><code>new Watcher(data, () =&gt; { mount()})</code><ol><li>首先进入<code>new Watcher</code>逻辑</li><li>构建函数中, 缓存<code>getter</code>后执行<code>this.get()</code> 这里的Dep.depTarget 为当前实例, 然后执行getter() 里面其实就是执行了 mount() ,mount执行逻辑中包括了render 和 createElement， createElement() 里面有data的属性, 由于第一步中已经对data的key进行了defineProperty 以及当前的Dep.depTarget 为当前实例，所以这里真正的实现了依赖收集, 闭包的Dep实例收集了对应的Watcher实例 然后就是执行渲染的逻辑(createElement)</li></ol></li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Watcher</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">getter</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">getter</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">getter</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">get</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">Dep</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">depTarget</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">getter</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">Dep</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">depTarget</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">update</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="vue3" tabindex="-1">vue3 <a class="header-anchor" href="#vue3" aria-hidden="true">#</a></h2><p>[[runtime-core初始化流程#开始处理挂载]]</p>`,12),o=[p];function t(r,c,y,F,i,D){return n(),a("div",null,o)}const C=s(l,[["render",t]]);export{A as __pageData,C as default};
