import{_ as s,c as a,o as n,a as l}from"./app.741d02cd.js";const d=JSON.parse('{"title":"移动端的笔记","description":"","frontmatter":{"title":"移动端的笔记","tags":["移动端"],"创建时间":"星期四, 十二月 22日 2022, 10:41:14 晚上","修改时间":"星期六, 十二月 24日 2022, 3:21:11 下午"},"headers":[{"level":2,"title":"移动端适配问题","slug":"移动端适配问题","link":"#移动端适配问题","children":[]},{"level":2,"title":"问题场景实践","slug":"问题场景实践","link":"#问题场景实践","children":[{"level":3,"title":"移动端300ms延迟","slug":"移动端300ms延迟","link":"#移动端300ms延迟","children":[]},{"level":3,"title":"解决移动端 Retina 屏 1px 像素问题","slug":"解决移动端-retina-屏-1px-像素问题","link":"#解决移动端-retina-屏-1px-像素问题","children":[]},{"level":3,"title":"穿透问题","slug":"穿透问题","link":"#穿透问题","children":[]},{"level":3,"title":"行内样式","slug":"行内样式","link":"#行内样式","children":[]},{"level":3,"title":"高清图片的问题","slug":"高清图片的问题","link":"#高清图片的问题","children":[]},{"level":3,"title":"iphoneX设配","slug":"iphonex设配","link":"#iphonex设配","children":[]},{"level":3,"title":"VW兼容方案","slug":"vw兼容方案","link":"#vw兼容方案","children":[]}]}],"relativePath":"工作区/关于面试/八股文/移动端.md"}'),o={name:"工作区/关于面试/八股文/移动端.md"},p=l(`<p>#八股文</p><h1 id="移动端的笔记" tabindex="-1">移动端的笔记 <a class="header-anchor" href="#移动端的笔记" aria-hidden="true">#</a></h1><h2 id="移动端适配问题" tabindex="-1">移动端适配问题 <a class="header-anchor" href="#移动端适配问题" aria-hidden="true">#</a></h2><ul><li>为了适应各种移动端设备，完美呈现应有的布局效果</li><li>各个移动端设备，分辨率大小不一致，网页想铺满整个屏幕，并在各种分辨下等比缩放</li></ul><p><a href="https://juejin.cn/post/7046169975706353701" target="_blank" rel="noreferrer">适配方案</a></p><ul><li>使用css的媒体查询<code>@media</code> (开发麻烦)</li><li>使用<code>rem</code>单位 (开发麻烦)</li><li>flexiable适配 (历史过渡用的，解决上述的麻烦)</li><li>viewport适配 (最佳实践)</li></ul><h2 id="问题场景实践" tabindex="-1">问题场景实践 <a class="header-anchor" href="#问题场景实践" aria-hidden="true">#</a></h2><h3 id="移动端300ms延迟" tabindex="-1">移动端300ms延迟 <a class="header-anchor" href="#移动端300ms延迟" aria-hidden="true">#</a></h3><blockquote><p>300ms 指的是 双击缩放 双击缩放，手指在屏幕快速点击两次。  当用户点击屏幕一次之后，浏览器并不会判断用户确实要打开至这个链接，还是想要进行双击操作 因此，safair 浏览器就会等待 300ms，用来判断用户是否在次点击了屏幕</p></blockquote><ul><li>禁用缩放，设置meta标签 user-scalable=no</li><li>fastclick.js</li></ul><blockquote><p>原理：FastClick 的实现原理是在检查到 touchend 事件的时候，会通过 dom 自定义事件立即发出 click 事件，并把浏览器在 300ms 之后真正的 click 事件阻止掉。fastclick.js 还可以解决穿透问题</p></blockquote><p><strong>触摸事件的响应顺序</strong></p><ul><li><code>ontouchstart</code></li><li><code>ontouchmove</code></li><li><code>ontouchend</code></li><li><code>onclick</code></li></ul><h3 id="解决移动端-retina-屏-1px-像素问题" tabindex="-1">解决移动端 Retina 屏 1px 像素问题 <a class="header-anchor" href="#解决移动端-retina-屏-1px-像素问题" aria-hidden="true">#</a></h3><ul><li><code>transform scale(.5)</code></li><li>伪元素 + <code>transform scale(.5)</code> (推荐)</li><li><code>box-shadow</code> (有阴影，不好看)</li></ul><p>下面了解</p><ul><li><code>border-image</code></li><li><code>background-image</code></li><li><code>svg</code></li><li><code>linear-gradient</code>通过线性渐变实现</li></ul><h3 id="穿透问题" tabindex="-1">穿透问题 <a class="header-anchor" href="#穿透问题" aria-hidden="true">#</a></h3><blockquote><p>在移动端开发的时候，我们有时候会遇到这样一个 bug：点击关闭遮罩层的时候，遮罩层下面的带有点击的元素也会被触发，给人一种击穿了页面的感觉，这是为什么呢？</p></blockquote><blockquote><p>造成原因: 遮罩使用<code>touchstart</code>事件 遮罩后面的按钮使用<code>click</code>事件</p><p>因为 300ms延迟 在这时间区间内 刚好在同一个区域内点击了，造成2次事件都发生了。</p></blockquote><ul><li><code>touchstart</code>内使用阻止默认事件</li><li>统一使用click (同级)</li><li>延迟执行 (延迟300ms执行touchstart事件)</li><li>css属性<code>pointer-events</code></li><li>fastclick.js</li></ul><h3 id="行内样式" tabindex="-1">行内样式 <a class="header-anchor" href="#行内样式" aria-hidden="true">#</a></h3><p>场景: 使用<code>postcss-px-to-viewport</code>实际开发中，在设置行内样式时，它没有为设置行内样式做转换</p><p>使用增加、删除、修改 <code>className</code> 的方式处理这类场景，<code>CSS</code> 与<code>JS</code> 的分离还是最佳实践</p><h3 id="高清图片的问题" tabindex="-1">高清图片的问题 <a class="header-anchor" href="#高清图片的问题" aria-hidden="true">#</a></h3><ul><li>适用普通屏的图片在 retina 屏中，图片展示就会显得模糊；</li><li><strong>适用 retina 屏的图片在普通屏中，图片展示就会缺少色差、没有锐利度，并且浪费带宽</strong>； 所以如果对性能、美观要求很高的场景，需要根据 dpr 区分使用对应的图片</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> dpr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> devicePixelRatio </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> devicePixelRatio </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">documentElement</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data-dpr</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> dpr)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">data-dpr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">hello</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">image@1x.jpg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">[data-dpr=&quot;2&quot;] .hello {</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">image@2x.jpg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">data-dpr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">hello</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">image@3x.jpg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="iphonex设配" tabindex="-1">iphoneX设配 <a class="header-anchor" href="#iphonex设配" aria-hidden="true">#</a></h3><blockquote><p>iphoneX取消物理按键后，改成了底部小黑条。对于网页而言，顶部（刘海部位）的适配问题浏览器已经做了处理，所以我们只需要关注底部与小黑条的适配问题即可（即常见的吸底导航、返回顶部等各种相对底部 fixed (修复) 定位的元素）</p></blockquote><p><img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202212241503650.png" alt="image.png"></p><blockquote><p>需要了解几个新知识: 安全区域、<code>viewport-fit</code>、<code>env()</code>、<code>constant()</code></p></blockquote><h4 id="安全区域" tabindex="-1">安全区域 <a class="header-anchor" href="#安全区域" aria-hidden="true">#</a></h4><p>安全区域指的是一个可视窗口范围，处于安全区域的内容不受圆角（corners）、齐刘海（sensor housing (房子) ）、小黑条（Home Indicator (指标) ）影响，</p><p>我们要做好适配，必须保证页面可视、可操作区域是在安全区域内。<a href="https://developer.apple.com/design/human-interface-guidelines/ios/overview/iphone-x/" target="_blank" rel="noreferrer">参考内容</a></p><h4 id="viewport-fit" tabindex="-1">Viewport-fit <a class="header-anchor" href="#viewport-fit" aria-hidden="true">#</a></h4><p>iOS11 新增特性，苹果公司为了适配 iPhoneX 对现有 viewport meta 标签的一个扩展，用于设置网页在可视窗口的布局方式，可设置三个值。​</p><ul><li>contain (包含) : 可视窗口完全包含网页内容（左图）</li><li>cover：网页内容完全覆盖可视窗口（右图）</li><li>auto：默认值，跟 contain (包含) 表现一致</li></ul><p>需要注意：网页默认不添加扩展的表现是 viewport-fit= contain (包含) ，需要适配 iPhoneX 必须设置 viewport-fit=cover，这是适配的关键步骤。更详细说明，参考文档：<a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.w3.org%2FTR%2Fcss-round-display-1%2F%23viewport-fit-descriptor" title="https://www.w3.org/TR/css-round-display-1/#viewport-fit-descriptor" target="_blank" rel="noreferrer">viewport-fit-descriptor</a></p><p><img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202212241507405.png" alt="image.png"></p><h4 id="env和constant" tabindex="-1">Env和constant <a class="header-anchor" href="#env和constant" aria-hidden="true">#</a></h4><p>iOS11 新增特性，Webkit 的一个 CSS 函数，用于设定安全区域与边界的距离，有四个预定义的变量：</p><ul><li>safe-area-inset-left：安全区域距离左边边界距离</li><li>safe-area-inset-right：安全区域距离右边边界距离</li><li>safe-area-inset-top：安全区域距离顶部边界距离</li><li>safe-area-inset-bottom：安全区域距离底部边界距离</li></ul><p>这里我们只需要关注 safe-area-inset-bottom 这个变量，因为它对应的就是小黑条的高度（横竖屏时值不一样）。</p><blockquote><p>注意：当 viewport-fit= contain (包含) 时 env() 是不起作用的，必须要配合 viewport-fit=cover 使用。对于不支持 env() 的浏览器，浏览器将会忽略它。</p><p>需要注意的是之前使用的 constant () 在 iOS11.2 之后就不能使用的，但我们还是需要做向后兼容，像这样：</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">padding-bottom</span><span style="color:#A6ACCD;">: constant(</span><span style="color:#FFCB6B;">safe-area-inset-bottom</span><span style="color:#A6ACCD;">); </span><span style="color:#676E95;">/* 兼容 iOS &lt; 11.2 */</span></span>
<span class="line"><span style="color:#FFCB6B;">padding-bottom</span><span style="color:#A6ACCD;">: env(</span><span style="color:#FFCB6B;">safe-area-inset-bottom</span><span style="color:#A6ACCD;">); </span><span style="color:#676E95;">/* 兼容 iOS &gt;= 11.2 */</span></span>
<span class="line"></span></code></pre></div><h4 id="设配iphonex步骤" tabindex="-1">设配iphoneX步骤 <a class="header-anchor" href="#设配iphonex步骤" aria-hidden="true">#</a></h4><p>新增 viweport-fit 属性，使得页面内容完全覆盖整个窗口，前面也有提到过，只有设置了 viewport-fit=cover，才能使用 env()</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width, viewport-fit=cover</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h5 id="fixed完全吸底元素的适配" tabindex="-1">Fixed完全吸底元素的适配 <a class="header-anchor" href="#fixed完全吸底元素的适配" aria-hidden="true">#</a></h5><p>内边距<code>padding</code></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">padding-bottom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> constant(safe-area-inset-bottom)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">padding-bottom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> env(safe-area-inset-bottom)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>计算函数<code>calc</code>函数计算高度</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">calc</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">60px</span><span style="color:#A6ACCD;">(假设值</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> + constant(safe-area-inset-bottom))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">calc</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">60px</span><span style="color:#A6ACCD;">(假设值</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> + env(safe-area-inset-bottom))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>注意，这个方案需要吸底条必须是有背景色的，因为扩展的部分背景是跟随外容器的，否则出现镂空情况。</p></blockquote><p>使用空的颜色块占用</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> fixed</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">bottom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> constant(safe-area-inset-bottom)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> env(safe-area-inset-bottom)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">fff</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>使用空的颜色块就不用改变原来的css加入<code>margin-bottom</code></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin-bottom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> constant(safe-area-inset-bottom)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin-bottom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> env(safe-area-inset-bottom)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="vw兼容方案" tabindex="-1">VW兼容方案 <a class="header-anchor" href="#vw兼容方案" aria-hidden="true">#</a></h3><p>Android 4.4 之下和 iOS 8 以下的版本有一定的兼容性问题（ps:几乎绝迹，大家可以统计下你们的用户使用的系统版本占比），但是社区提供了兼容性解决方案，其为 viewport 的 buggyfill：<a href="https://github.com/rodneyrehm/viewport-units-buggyfill?spm=ata.13261165.0.0.5c016ef2PzyaPL%22" target="_blank" rel="noreferrer">Viewport Units (单位) Buggyfill</a>，可以访问其 github 官网查看。</p><p>我们也做了对应的实践，但是考虑到性能，我们项目模版中不会进行引入。</p><h4 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-hidden="true">#</a></h4><p>JavaScript文件引入</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">//g.alicdn.com/fdilab/lib3rd/viewport-units-buggyfill/0.6.2/??viewport-units-buggyfill.hacks.min.js,viewport-units-buggyfill.min.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>调用</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    window.onload = function () </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">viewportUnitsBuggyfill</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">init</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">hacks</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">viewportUnitsBuggyfillHacks</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>在每个class属性中加入</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">my-viewport-units-using-thingie</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50vmin</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50vmax</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">calc</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">50vh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">calc</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">50vw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;">/* hack to engage viewport-units-buggyfill */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">viewport-units-buggyfill; width: 50vmin; height: 50vmax; top: calc(50vh - 100px); left: calc(50vw - 100px);</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="postcss-viewport-units引入" tabindex="-1">Postcss-viewport-units引入 <a class="header-anchor" href="#postcss-viewport-units引入" aria-hidden="true">#</a></h4><p>我们人肉引入 content (内容) 属性，效率是非常低下的，好在社区提供了 postcss-viewport-units 插件，帮我们自动处理 content (内容) ：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm i postcss</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">viewport</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">units </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">save</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">dev</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">loader</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">postcss-loader</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">options</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#FFCB6B;">ident</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">postcss</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#FFCB6B;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">     </span><span style="color:#676E95;">// 我们加的配置</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#82AAFF;">require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">postcss-viewport-units</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">   ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#FFCB6B;">sourceMap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">isProductionEnv</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">},</span></span>
<span class="line"></span></code></pre></div><p>自动帮我们加入content内容</p>`,74),e=[p];function t(c,r,i,D,y,F){return n(),a("div",null,e)}const A=s(o,[["render",t]]);export{d as __pageData,A as default};
