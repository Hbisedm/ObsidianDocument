import{_ as s,c as a,o as n,a as p}from"./app.0b159a37.js";const d=JSON.parse('{"title":"公众号、H5的开发","description":"","frontmatter":{"title":"公众号、H5的开发","date":"2022-05-26T12:42:26.000Z","tags":["公众号"],"excerpt":"公众号、H5的开发流程"},"headers":[{"level":2,"title":"准备工具与环境：","slug":"准备工具与环境","link":"#准备工具与环境","children":[]},{"level":2,"title":"方式：","slug":"方式","link":"#方式","children":[]},{"level":2,"title":"配置服务","slug":"配置服务","link":"#配置服务","children":[]},{"level":2,"title":"开发","slug":"开发","link":"#开发","children":[{"level":3,"title":"获取access_token(公众号开发需要）","slug":"获取access-token-公众号开发需要","link":"#获取access-token-公众号开发需要","children":[]},{"level":3,"title":"1. 公众号如何回复","slug":"_1-公众号如何回复","link":"#_1-公众号如何回复","children":[]},{"level":3,"title":"2. 自定义菜单","slug":"_2-自定义菜单","link":"#_2-自定义菜单","children":[]},{"level":3,"title":"3. H5授权","slug":"_3-h5授权","link":"#_3-h5授权","children":[]},{"level":3,"title":"4. H5调用weixin-sdk","slug":"_4-h5调用weixin-sdk","link":"#_4-h5调用weixin-sdk","children":[]}]}],"relativePath":"工作区/框架技术/公众号/公众号与微信H5开发大致流程.md"}'),l={name:"工作区/框架技术/公众号/公众号与微信H5开发大致流程.md"},e=p(`<p>#公众号 #微信H5开发</p><h1 id="流程-springboot、vue3" tabindex="-1">流程（SpringBoot、Vue3） <a class="header-anchor" href="#流程-springboot、vue3" aria-hidden="true">#</a></h1><p>面向过程写法</p><h2 id="准备工具与环境" tabindex="-1">准备工具与环境： <a class="header-anchor" href="#准备工具与环境" aria-hidden="true">#</a></h2><ul><li>JDK1.8</li><li>Node16</li><li>IDEA</li><li>WebStorm(VS Code也可)</li><li>Docker(容器：Nginx)</li><li>ngrok(内网穿透）</li></ul><h2 id="方式" tabindex="-1">方式： <a class="header-anchor" href="#方式" aria-hidden="true">#</a></h2><ol><li><p>使用官方的包进行开发后端（需要自己一个个搭建，比较麻烦点）</p><p><a href="https://github.com/Wechat-Group/WxJava" target="_blank" rel="noreferrer"></a><a href="https://github.com/Wechat-Group/WxJava" target="_blank" rel="noreferrer">https://github.com/Wechat-Group/WxJava</a></p></li><li><p>使用别人写好的springboot模板快速开发后端</p><p><a href="https://github.com/binarywang/weixin-java-mp-demo" target="_blank" rel="noreferrer"></a><a href="https://github.com/binarywang/weixin-java-mp-demo" target="_blank" rel="noreferrer">https://github.com/binarywang/weixin-java-mp-demo</a></p></li></ol><p><em>我使用了第二种方式</em></p><h2 id="配置服务" tabindex="-1">配置服务 <a class="header-anchor" href="#配置服务" aria-hidden="true">#</a></h2><p><code>申请公众号(个人订阅号)→申请测试号→配置服务器地址信息等</code></p><p><img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202205200928316.png" alt=""></p><ol><li><p>测试号信息官方给我们的</p></li><li><p>接口配置信息的<strong>配置流程</strong></p><p>先将Springboot配置好测试号的信息</p><p><img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202205200929969.png" alt=""></p><p>其中com.github.binarywang.demo.wx.mp.controller.WxPortalController#authGet，微信那边实际请求到我们这个地址(get请求做身份验证，post请求做交互作用)</p><p>配置<code>http://域名/api/wx/portal/{appid} 和 Token</code> 即可</p></li><li><p>域名如何生成</p><p>ngork内网穿透而来，映射的是docker里面到nginx容器，docker如何跑Nginx，google一下就行</p><p>主要配置个挂载Mounts，使得每次本地前端项目打包后就可以在手机上直接看到最新的页面情况</p></li></ol><p><img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202205200929871.png" alt=""></p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># user  nobody;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> worker_processes </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">events</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> worker_connections </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">http</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">      mime.types</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> default_type </span><span style="color:#A6ACCD;"> application/octet-stream</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> sendfile </span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;"> on;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> keepalive_timeout </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">65</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> autoindex </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 开启目录文件列表</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> autoindex_exact_size </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 显示出文件的确切大小，单位是bytes</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> autoindex_localtime </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 显示的文件时间为文件的服务器时间</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> charset </span><span style="color:#A6ACCD;">utf-8,gbk,gb2312</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 避免中文乱码</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> gzip  on;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;"> localhost</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">/usr/share/nginx/html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;">index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;"> try_files $</span><span style="color:#A6ACCD;">uri </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">uri/ /index.html</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">            }</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/assets/</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;"> alias </span><span style="color:#A6ACCD;"> /usr/share/nginx/html/assets/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            }</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">^~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/api/</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">&lt;http://192.168.1.8:9088/&gt;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">#SpringBoot服务</span></span>
<span class="line"><span style="color:#A6ACCD;">            }</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span></code></pre></div><p>可以看到里面配置了个方向代理，代理到我们本地到SpringBoot服务，所以接口配置的URL实际访问<code>http://域名/api/wx/portal/{appid} =&gt; http:192.168.1.8:9088/wx/portal/{appid}</code></p><ol start="4"><li>JS安全域名配置ngork提供给我们的域名就行</li></ol><h2 id="开发" tabindex="-1">开发 <a class="header-anchor" href="#开发" aria-hidden="true">#</a></h2><h3 id="获取access-token-公众号开发需要" tabindex="-1">获取access_token(公众号开发需要） <a class="header-anchor" href="#获取access-token-公众号开发需要" aria-hidden="true">#</a></h3><p>个人服务器通过https请求方式: GET <a href="https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET" target="_blank" rel="noreferrer"></a><a href="https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET" target="_blank" rel="noreferrer">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET</a>填写对应参数即可获取到access_token</p><p>weixin-java-mp-demo框架帮我们处理好了，还帮我们做了自动刷新处理，只要我们在application.yaml文件中配置没问题，其他都不用管</p><h3 id="_1-公众号如何回复" tabindex="-1">1. 公众号如何回复 <a class="header-anchor" href="#_1-公众号如何回复" aria-hidden="true">#</a></h3><p>我们使用了weixin-java-mp-demo进行开发后端，所以我们跟测试号的所有交互都会到这个方法中com.github.binarywang.demo.wx.mp.controller.WxPortalController#post</p><p>所以我们只要在对应到handler中处理不同事情就行</p><p><img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202205200930000.png" alt=""></p><h3 id="_2-自定义菜单" tabindex="-1">2. 自定义菜单 <a class="header-anchor" href="#_2-自定义菜单" aria-hidden="true">#</a></h3><p><strong>com/github/binarywang/demo/wx/mp/controller/WxMenuController.java</strong>中定义了很多开发者对菜单的操作</p><h3 id="_3-h5授权" tabindex="-1">3. H5授权 <a class="header-anchor" href="#_3-h5授权" aria-hidden="true">#</a></h3><p>H5页面首先拿到code，将code发到个人服务器，个人服务器去微信服务器请求后返回open_id给H5页面，用户的access_token不要给到前端，</p><p>2种模式，snsapi_base与snsapi_userinfo</p><p>snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ）</p><h3 id="_4-h5调用weixin-sdk" tabindex="-1">4. H5调用weixin-sdk <a class="header-anchor" href="#_4-h5调用weixin-sdk" aria-hidden="true">#</a></h3><ol><li><p>绑定域名</p><p><img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202205200930596.png" alt=""></p></li><li><p>加入微信sdk.js</p></li><li><p>通过config接口注入权限验证配置 config接口的参数来自用户对我们个人服务器发送请求返回对应对config参数给前端、</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">config</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">debug</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">appId</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// 必填，公众号的唯一标识</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">timestamp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// 必填，生成签名的时间戳</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">nonceStr</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// 必填，生成签名的随机串</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">signature</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;">// 必填，签名</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">jsApiList</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [] </span><span style="color:#676E95;">// 必填，需要使用的JS接口列表</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>什么是config参数？发送什么请求？</p><p><a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#62" target="_blank" rel="noreferrer"></a><a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#62" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#62</a></p></li><li><p>使用ready接口处理成功验证</p></li><li><p>使用error接口处理失败验证</p></li></ol>`,32),o=[e];function t(r,c,i,D,C,y){return n(),a("div",null,o)}const h=s(l,[["render",t]]);export{d as __pageData,h as default};
