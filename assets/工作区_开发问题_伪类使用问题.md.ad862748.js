import{_ as e,c as t,o as a,a as o}from"./app.d0c2f5ea.js";const f=JSON.parse('{"title":"伪类使用问题的笔记","description":"","frontmatter":{"title":"伪类使用问题的笔记","tags":["伪类使用问题"],"创建时间":"星期一, 八月 29日 2022, 9:44:15 上午","修改时间":"星期一, 八月 29日 2022, 9:45:53 上午"},"headers":[],"relativePath":"工作区/开发问题/伪类使用问题.md"}'),_={name:"工作区/开发问题/伪类使用问题.md"},i=o('<p>#伪类</p><h1 id="伪类使用问题的笔记" tabindex="-1">伪类使用问题的笔记 <a class="header-anchor" href="#伪类使用问题的笔记" aria-hidden="true">#</a></h1><p><code>::before</code>和<code>::after</code>在这些可替换元素中是不能使用的</p><blockquote><p>在 CSS 中，可替换元素（replaced element）的展现效果不是由 CSS 来控制的。这些元素是一种外部对象，它们外观的渲染，是独立于 CSS 的。 简单来说，它们的内容不受当前文档的样式的影响。CSS 可以影响可替换元素的位置，但不会影响到可替换元素自身的内容。某些可替换元素，例如 &lt; iframe &gt; 元素，可能具有自己的样式表，但它们不会继承父文档的样式。</p></blockquote><p>典型的可替换元素有：</p><ul><li>&lt; iframe &gt;</li><li>&lt; video &gt;</li><li>&lt; embed &gt;</li><li>&lt; img &gt;</li></ul>',6),l=[i];function r(c,d,s,n,p,m){return a(),t("div",null,l)}const h=e(_,[["render",r]]);export{f as __pageData,h as default};
