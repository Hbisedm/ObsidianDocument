import{_ as s,c as a,o as n,a as e}from"./app.64cc5612.js";const C=JSON.parse('{"title":"npm发布","description":"","frontmatter":{"title":"npm发布","date":"2022-07-22T17:26:14.000Z","tags":["npm发布"]},"headers":[{"level":2,"title":"常规发布","slug":"常规发布","link":"#常规发布","children":[{"level":3,"title":"初始化项目","slug":"初始化项目","link":"#初始化项目","children":[]},{"level":3,"title":"登录","slug":"登录","link":"#登录","children":[]},{"level":3,"title":"用户信息","slug":"用户信息","link":"#用户信息","children":[]},{"level":3,"title":"发布","slug":"发布","link":"#发布","children":[]}]},{"level":2,"title":"创建域隔离包（scope package）","slug":"创建域隔离包-scope-package","link":"#创建域隔离包-scope-package","children":[{"level":3,"title":"初始化项目","slug":"初始化项目-1","link":"#初始化项目-1","children":[]},{"level":3,"title":"发布","slug":"发布-1","link":"#发布-1","children":[]}]},{"level":2,"title":"搭建npm服务","slug":"搭建npm服务","link":"#搭建npm服务","children":[]}],"relativePath":"工作区/工程化/npm发布.md"}'),l={name:"工作区/工程化/npm发布.md"},p=e(`<p>#npm</p><h1 id="npm发布的笔记" tabindex="-1">npm发布的笔记 <a class="header-anchor" href="#npm发布的笔记" aria-hidden="true">#</a></h1><h2 id="常规发布" tabindex="-1">常规发布 <a class="header-anchor" href="#常规发布" aria-hidden="true">#</a></h2><h3 id="初始化项目" tabindex="-1">初始化项目 <a class="header-anchor" href="#初始化项目" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm init</span></span>
<span class="line"></span></code></pre></div><p>填写对应信息后，目录下生成<code>package.json</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index.js</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这个main的指向很重要。</p><h3 id="登录" tabindex="-1">登录 <a class="header-anchor" href="#登录" aria-hidden="true">#</a></h3><p>在控制台执行 npm login，username 使用刚刚创建的账号码，email 使用注册使用的 email。 OTP 验证码会通过该邮箱发送，最后填写验证码即完成 npm 登陆。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm login</span></span>
<span class="line"><span style="color:#A6ACCD;">Username: xxxx</span></span>
<span class="line"><span style="color:#A6ACCD;">Password: xxxx</span></span>
<span class="line"><span style="color:#A6ACCD;">Email: </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">this IS public</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">npm notice Please check your email </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> a one-time password </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">OTP</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">Enter one-time password from your authenticator app: </span></span>
<span class="line"></span></code></pre></div><h3 id="用户信息" tabindex="-1">用户信息 <a class="header-anchor" href="#用户信息" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm profile get</span></span>
<span class="line"></span></code></pre></div><h3 id="发布" tabindex="-1">发布 <a class="header-anchor" href="#发布" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm publish</span></span>
<span class="line"></span></code></pre></div><h2 id="创建域隔离包-scope-package" tabindex="-1">创建域隔离包（scope package） <a class="header-anchor" href="#创建域隔离包-scope-package" aria-hidden="true">#</a></h2><blockquote><p>@xxx/xxx，型如 @babel/preset-env</p></blockquote><p>这样的包类似于用命名空间区分同名类，在 npm 中称为 scope。这样的包可以帮助我们创建一个语义化的报名但不用担心因为重名无法发布。</p><p>npm官网登录账号后，账号头像点击，选择<code>add organization</code>添加组织</p><h3 id="初始化项目-1" tabindex="-1">初始化项目 <a class="header-anchor" href="#初始化项目-1" aria-hidden="true">#</a></h3><p>大部分操作和上面一样，只是初始化时加入参数<code>--scope=@xxxxxx</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm init --scope=@hbisedm</span></span>
<span class="line"></span></code></pre></div><p>创建的<code>package.json</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@hbisedm/utils</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>前面多了个刚才指定的组织名</p><h3 id="发布-1" tabindex="-1">发布 <a class="header-anchor" href="#发布-1" aria-hidden="true">#</a></h3><p>与常规发布不同，这里我们发布需要注意，由于我们使用的是免费的组织管理，所以只能发公共包。即我们运行 npm publish 时要加上 --access public（scoped package 默认为私有发布）。 否则会提示付费。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm publish --access public</span></span>
<span class="line"></span></code></pre></div><h2 id="搭建npm服务" tabindex="-1">搭建npm服务 <a class="header-anchor" href="#搭建npm服务" aria-hidden="true">#</a></h2><p>实际开发中，我们需要一些内部共享的 npm 包，所以在企业内部搭建一个私有 npm 源也很重要。</p><ol><li>npm 支持安装 git 仓库，可以直接使用私有 git 仓库支持 npm 包.如</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm install git+</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">https://xxx.xx/mypkg.git</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>使用 jfrog artifactory 作为 npm registry</li><li>verdaccio （<strong>开源的轻量的私有的npm proxy registry</strong>）、</li><li>cnpm + <a href="http://cnpmjs.org" target="_blank" rel="noreferrer">cnpmjs.org</a> (<strong>基于 KOA 的私有 npm 源方案</strong>)</li></ol><p>参考 <a href="https://juejin.cn/post/7062968467351142413" target="_blank" rel="noreferrer">npm发布博客</a></p>`,34),o=[p];function c(t,i,r,d,h,u){return n(),a("div",null,o)}const D=s(l,[["render",c]]);export{C as __pageData,D as default};
