import{_ as s,c as a,o as n,a as l}from"./app.d0c2f5ea.js";const F=JSON.parse('{"title":"Grid布局的笔记","description":"","frontmatter":{"title":"Grid布局的笔记","tags":["Grid","CSS"],"创建时间":"星期三, 七月 27日 2022, 8:58:57 晚上","修改时间":"星期四, 九月 1日 2022, 10:25:12 晚上"},"headers":[{"level":2,"title":"二维布局","slug":"二维布局","link":"#二维布局","children":[]},{"level":2,"title":"基本知识","slug":"基本知识","link":"#基本知识","children":[{"level":3,"title":"容器和项目","slug":"容器和项目","link":"#容器和项目","children":[]},{"level":3,"title":"行和列","slug":"行和列","link":"#行和列","children":[]},{"level":3,"title":"单元格","slug":"单元格","link":"#单元格","children":[]},{"level":3,"title":"网格线","slug":"网格线","link":"#网格线","children":[]}]},{"level":2,"title":"容器属性","slug":"容器属性","link":"#容器属性","children":[{"level":3,"title":"display属性","slug":"display属性","link":"#display属性","children":[]},{"level":3,"title":"Grid-template-columns 属性与grid-template-rows 属性","slug":"grid-template-columns-属性与grid-template-rows-属性","link":"#grid-template-columns-属性与grid-template-rows-属性","children":[]},{"level":3,"title":"Grid-row-gap 属性与grid-column-gap 属性与grid-gap 属性*","slug":"grid-row-gap-属性与grid-column-gap-属性与grid-gap-属性","link":"#grid-row-gap-属性与grid-column-gap-属性与grid-gap-属性","children":[]},{"level":3,"title":"Grid-template-areas 属性","slug":"grid-template-areas-属性","link":"#grid-template-areas-属性","children":[]},{"level":3,"title":"grid-auto-flow属性","slug":"grid-auto-flow属性","link":"#grid-auto-flow属性","children":[]},{"level":3,"title":"Justify-items 属性与align-items 属性与place-items 属性","slug":"justify-items-属性与align-items-属性与place-items-属性","link":"#justify-items-属性与align-items-属性与place-items-属性","children":[]},{"level":3,"title":"Justify-content 属性与align-content 属性与place-content 属性","slug":"justify-content-属性与align-content-属性与place-content-属性","link":"#justify-content-属性与align-content-属性与place-content-属性","children":[]},{"level":3,"title":"Grid-auto-columns 属性与grid-auto-rows 属性","slug":"grid-auto-columns-属性与grid-auto-rows-属性","link":"#grid-auto-columns-属性与grid-auto-rows-属性","children":[]},{"level":3,"title":"Grid-template 属性与grid 属性","slug":"grid-template-属性与grid-属性","link":"#grid-template-属性与grid-属性","children":[]}]},{"level":2,"title":"项目属性","slug":"项目属性","link":"#项目属性","children":[{"level":3,"title":"Grid-column-start 属性与grid-column-end 属性与grid-row-start 属性与grid-row-end 属性","slug":"grid-column-start-属性与grid-column-end-属性与grid-row-start-属性与grid-row-end-属性","link":"#grid-column-start-属性与grid-column-end-属性与grid-row-start-属性与grid-row-end-属性","children":[]},{"level":3,"title":"Grid-column 属性与grid-row 属性","slug":"grid-column-属性与grid-row-属性","link":"#grid-column-属性与grid-row-属性","children":[]},{"level":3,"title":"Grid-area 属性","slug":"grid-area-属性","link":"#grid-area-属性","children":[]},{"level":3,"title":"Justify-self 属性与align-self 属性与place-self 属性","slug":"justify-self-属性与align-self-属性与place-self-属性","link":"#justify-self-属性与align-self-属性与place-self-属性","children":[]}]},{"level":2,"title":"理解","slug":"理解","link":"#理解","children":[]}],"relativePath":"工作区/基本知识/CSS/Grid布局.md"}'),p={name:"工作区/基本知识/CSS/Grid布局.md"},o=l(`<p>#CSS #Grid #布局</p><h1 id="grid布局的笔记" tabindex="-1">Grid布局的笔记 <a class="header-anchor" href="#grid布局的笔记" aria-hidden="true">#</a></h1><blockquote><p>Grid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。这部分先介绍容器属性。</p></blockquote><h2 id="二维布局" tabindex="-1">二维布局 <a class="header-anchor" href="#二维布局" aria-hidden="true">#</a></h2><p>讲到布局，我们就会想到 <code>flex</code> 布局，甚至有人认为竟然有 <code>flex</code> 布局了，似乎没有必要去了解 <code>Grid</code> 布局。但 <code>flex</code> 布局和 <code>Grid</code> 布局有实质的区别，那就是 <strong><code>flex</code> 布局是一维布局，<code>Grid</code> 布局是二维布局</strong>。<code>flex</code> 布局一次只能处理一个维度上的元素布局，一行或者一列。<code>Grid</code> 布局是将容器划分成了“行”和“列”，产生了一个个的网格，我们可以将网格元素放在与这些行和列相关的位置上，从而达到我们布局的目的。</p><h2 id="基本知识" tabindex="-1">基本知识 <a class="header-anchor" href="#基本知识" aria-hidden="true">#</a></h2><h3 id="容器和项目" tabindex="-1">容器和项目 <a class="header-anchor" href="#容器和项目" aria-hidden="true">#</a></h3><p>grid布局中最外层包裹的盒子叫做<code>容器</code>，而容器中的一级子元素称为<code>项目</code></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">project</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">&lt;!-- p标签在项目不是项目 --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="行和列" tabindex="-1">行和列 <a class="header-anchor" href="#行和列" aria-hidden="true">#</a></h3><p>容器里面的<strong>水平区域</strong>称为&quot;行&quot;（row），<strong>垂直区域</strong>称为&quot;列&quot;（column）。</p><h3 id="单元格" tabindex="-1">单元格 <a class="header-anchor" href="#单元格" aria-hidden="true">#</a></h3><p>行和列的交叉区域，称为&quot;单元格&quot;（cell）。 正常情况下，<code>n</code>行和<code>m</code>列会产生<code>n x m</code>个单元格。比如，3行3列会产生9个单元格。</p><h3 id="网格线" tabindex="-1">网格线 <a class="header-anchor" href="#网格线" aria-hidden="true">#</a></h3><p>划分网格的线，称为&quot;网格线&quot;（grid line）。水平网格线划分出<strong>行</strong>，垂直网格线划分出<strong>列</strong>。 正常情况下，<code>n</code>行有<code>n + 1</code>根水平网格线，<code>m</code>列有<code>m + 1</code>根垂直网格线，比如三行就有四根水平网格线。</p><h2 id="容器属性" tabindex="-1">容器属性 <a class="header-anchor" href="#容器属性" aria-hidden="true">#</a></h2><h3 id="display属性" tabindex="-1">display属性 <a class="header-anchor" href="#display属性" aria-hidden="true">#</a></h3><p><code>display: grid</code>指定一个容器采用网格布局。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>默认情况下，容器元素都是块级元素，但也可以设成行内元素。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> inline-grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>注意，设为网格布局以后，容器子元素（项目）的<code>float</code>、<code>display: inline-block</code>、<code>display: table-cell</code>、<code>vertical-align</code>和<code>column-*</code>等设置都将失效。</p></blockquote><h3 id="grid-template-columns-属性与grid-template-rows-属性" tabindex="-1">Grid-template-columns 属性与grid-template-rows 属性 <a class="header-anchor" href="#grid-template-columns-属性与grid-template-rows-属性" aria-hidden="true">#</a></h3><p>容器指定了网格布局以后，接着就要划分行和列。<code>grid-template-columns</code>属性定义每一列的<strong>列宽</strong>，<code>grid-template-rows</code>属性定义每一行的<strong>行高</strong>。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-rows</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><a href="https://jsbin.com/qiginur/edit?css,output" target="_blank" rel="noreferrer">上面代码</a>指定了一个三行三列的网格，列宽和行高都是<code>100px</code>。 除了使用绝对单位，也可以使用百分比。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">33.33%</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">33.33%</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">33.33%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-rows</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">33.33%</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">33.33%</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">33.33%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="repeat" tabindex="-1">repeat() <a class="header-anchor" href="#repeat" aria-hidden="true">#</a></h4><p>有时候，重复写同样的值非常麻烦，尤其网格很多时。这时，可以使用<code>repeat()</code>函数，简化重复的值。上面的代码用<code>repeat()</code>改写如下。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">repeat</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">33.33%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-rows</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">repeat</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">33.33%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>repeat()</code>接受两个参数，第一个参数是重复的次数（上例是3），第二个参数是所要重复的值。</p><p><code>repeat()</code>重复某种模式也是可以的。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">grid-template-columns</span><span style="color:#A6ACCD;">: repeat(2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 100px 20px 80px);</span></span>
<span class="line"></span></code></pre></div><p><a href="https://jsbin.com/cokohu/edit?css,output" target="_blank" rel="noreferrer">上面代码</a>定义了6列，第一列和第四列的宽度为<code>100px</code>，第二列和第五列为<code>20px</code>，第三列和第六列为<code>80px</code>。</p><h4 id="auto-fill-关键字" tabindex="-1">Auto-fill 关键字 <a class="header-anchor" href="#auto-fill-关键字" aria-hidden="true">#</a></h4><p>有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用<code>auto-fill</code>关键字表示自动填充。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">repeat</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">auto-fill</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><a href="https://jsbin.com/himoku/edit?css,output" target="_blank" rel="noreferrer">上面代码</a>表示每列宽度<code>100px</code>，然后自动填充，直到容器不能放置更多的列。 可以达到响应式的效果。</p><h4 id="fr关键字" tabindex="-1">fr关键字 <a class="header-anchor" href="#fr关键字" aria-hidden="true">#</a></h4><p>为了方便表示比例关系，网格布局提供了<code>fr</code>关键字（fraction 的缩写，意为&quot;片段&quot;）。如果两列的宽度分别为<code>1fr</code>和<code>2fr</code>，就表示后者是前者的两倍。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1fr</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1fr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><a href="https://jsbin.com/hadexek/edit?html,css,output" target="_blank" rel="noreferrer">上面代码</a>表示两个相同宽度的列。</p><h4 id="minmax关键字" tabindex="-1">minmax关键字 <a class="header-anchor" href="#minmax关键字" aria-hidden="true">#</a></h4><p><code>minmax()</code>函数产生一个长度范围，表示长度就在这个<strong>范围</strong>之中。它接受两个参数，分别为最小值和最大值。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">grid-template-columns</span><span style="color:#A6ACCD;">: 1fr 1fr minmax(100px</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 1fr);</span></span>
<span class="line"></span></code></pre></div><p>上面代码中，<code>minmax(100px, 1fr)</code>表示列宽不小于<code>100px</code>，不大于<code>1fr</code>。</p><h4 id="auto关键字" tabindex="-1">auto关键字 <a class="header-anchor" href="#auto关键字" aria-hidden="true">#</a></h4><p><code>auto</code>关键字表示由浏览器自己决定长度。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">grid-template-columns</span><span style="color:#A6ACCD;">: 100px auto 100px;</span></span>
<span class="line"></span></code></pre></div><p>上面代码中，第二列的宽度，基本上等于该列单元格的最大宽度，<strong>除非单元格内容设置了<code>min-width</code>，且这个值大于最大宽度。</strong></p><h4 id="网线格的名称" tabindex="-1">网线格的名称 <a class="header-anchor" href="#网线格的名称" aria-hidden="true">#</a></h4><p><code>grid-template-columns</code>属性和<code>grid-template-rows</code>属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [c1] </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> [c2] </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> [c3] auto [c4]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-rows</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [r1] </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> [r2] </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> [r3] auto [r4]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>上面代码指定网格布局为3行 x 3列，因此有4根垂直网格线和4根水平网格线。方括号里面依次是这八根线的名字。</p><p><strong>网格布局允许同一根线有多个名字</strong>，比如<code>[fifth-line row-5]</code>。</p><h4 id="布局实例" tabindex="-1">布局实例 <a class="header-anchor" href="#布局实例" aria-hidden="true">#</a></h4><p><code>grid-template-columns</code>属性对于网页布局非常有用。两栏式布局只需要一行代码。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">wrapper</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">70%</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">30%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>上面代码将左边栏设为70%，右边栏设为30%。</p><p>传统的十二网格布局，写起来也很容易。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">grid-template-columns</span><span style="color:#A6ACCD;">: repeat(12</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 1fr);</span></span>
<span class="line"></span></code></pre></div><h3 id="grid-row-gap-属性与grid-column-gap-属性与grid-gap-属性" tabindex="-1">Grid-row-gap 属性与grid-column-gap 属性与grid-gap 属性* <a class="header-anchor" href="#grid-row-gap-属性与grid-column-gap-属性与grid-gap-属性" aria-hidden="true">#</a></h3><p><code>grid-row-gap</code>属性设置行与行的间隔（行间距），<code>grid-column-gap</code>属性设置列与列的间隔（列间距）。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row-gap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-column-gap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><a href="https://jsbin.com/mezufab/edit?css,output" target="_blank" rel="noreferrer">上面代码</a>中，<code>grid-row-gap</code>用于设置行间距，<code>grid-column-gap</code>用于设置列间距。</p><p><code>grid-gap</code>属性是<code>grid-column-gap</code>和<code>grid-row-gap</code>的合并简写形式，语法如下。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">grid-gap</span><span style="color:#A6ACCD;">: &lt;</span><span style="color:#FFCB6B;">grid-row-gap</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> &lt;</span><span style="color:#FFCB6B;">grid-column-gap</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div><p>因此，上面一段 CSS 代码等同于下面的代码。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-gap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>如果<code>grid-gap</code>省略了第二个值，浏览器认为第二个值等于第一个值。</strong></p><p><strong>根据最新标准，上面三个属性名的<code>grid-</code>前缀已经删除，<code>grid-column-gap</code>和<code>grid-row-gap</code>写成<code>column-gap</code>和<code>row-gap</code>，<code>grid-gap</code>写成<code>gap</code>。</strong></p><h3 id="grid-template-areas-属性" tabindex="-1">Grid-template-areas 属性 <a class="header-anchor" href="#grid-template-areas-属性" aria-hidden="true">#</a></h3><p>网格布局允许指定&quot;区域&quot;（area），一个区域由单个或多个单元格组成。<code>grid-template-areas</code>属性用于定义区域。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-rows</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-areas</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a b c</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                       </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">d e f</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                       </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">g h i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>上面代码先划分出9个单元格，然后将其定名为<code>a</code>到<code>i</code>的九个区域，分别对应这九个单元格。</p><p>多个单元格合并成一个区域的写法如下。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">grid-template-areas</span><span style="color:#A6ACCD;">: &#39;</span><span style="color:#FFCB6B;">a</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">a</span><span style="color:#A6ACCD;"> a&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                     &#39;</span><span style="color:#FFCB6B;">b</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">b</span><span style="color:#A6ACCD;"> b&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                     &#39;c c c&#39;; \`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">上面代码将9个单元格分成\`a\`、\`b\`、\`c\`三个区域。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">下面是一个布局实例。</span></span>
<span class="line"><span style="color:#A6ACCD;">\`\`\`css</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">grid-template-areas</span><span style="color:#A6ACCD;">: &quot;</span><span style="color:#FFCB6B;">header</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">header</span><span style="color:#A6ACCD;"> header&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">                     &quot;</span><span style="color:#FFCB6B;">main</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span><span style="color:#A6ACCD;"> sidebar&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">                     &quot;</span><span style="color:#FFCB6B;">footer</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">footer</span><span style="color:#A6ACCD;"> footer&quot;;</span></span>
<span class="line"></span></code></pre></div><p>上面代码中，顶部是页眉区域<code>header</code>，底部是页脚区域<code>footer</code>，中间部分则为<code>main</code>和<code>sidebar</code>。</p><p>如果某些区域不需要利用，则使用&quot;点&quot;（<code>.</code>）表示。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">grid-template-areas</span><span style="color:#A6ACCD;">: &#39;</span><span style="color:#FFCB6B;">a</span><span style="color:#A6ACCD;"> . c&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                     &#39;d . f&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                     &#39;</span><span style="color:#FFCB6B;">g</span><span style="color:#A6ACCD;"> . i&#39;;</span></span>
<span class="line"></span></code></pre></div><p>上面代码中，中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域。</p><blockquote><p>注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为<code>区域名-start</code>，终止网格线自动命名为<code>区域名-end</code>。</p><p>比如，区域名为<code>header</code>，则起始位置的水平网格线和垂直网格线叫做<code>header-start</code>，终止位置的水平网格线和垂直网格线叫做<code>header-end</code>。</p></blockquote><h3 id="grid-auto-flow属性" tabindex="-1">grid-auto-flow属性 <a class="header-anchor" href="#grid-auto-flow属性" aria-hidden="true">#</a></h3><p>划分网格以后，容器的子元素会按照顺序，自动放置在每一个网格。默认的放置顺序是&quot;先行后列&quot;，即先填满第一行，再开始放入第二行，即下图数字的顺序。 这个顺序由<code>grid-auto-flow</code>属性决定，默认值是<code>row</code>，即&quot;先行后列&quot;。也可以将它设成<code>column</code>，变成&quot;先列后行&quot;。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">grid-auto-flow</span><span style="color:#A6ACCD;">: column;</span></span>
<span class="line"></span></code></pre></div><p><code>grid-auto-flow</code>属性除了设置成<code>row</code>和<code>column</code>，还可以设成<code>row dense</code>和<code>column dense</code>。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。 <a href="https://jsbin.com/wapejok/edit?css,output" target="_blank" rel="noreferrer">下面的例子</a>让1号项目和2号项目各占据两个单元格，然后在默认的<code>grid-auto-flow: row</code>情况下，会产生下面这样的布局。 <img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202206182146885.png" alt=""> 上图中，1号项目后面的位置是空的，这是因为3号项目默认跟着2号项目，所以会排在2号项目后面。 现在修改设置，设为<code>row dense</code>，表示&quot;先行后列&quot;，并且尽可能紧密填满，尽量不出现空格。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">grid-auto-flow</span><span style="color:#A6ACCD;">: row dense;</span></span>
<span class="line"></span></code></pre></div><p><img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202206182149480.png" alt=""> 上图会先填满第一行，再填满第二行，所以3号项目就会紧跟在1号项目的后面。8号项目和9号项目就会排到第四行。</p><p>如果将设置改为<code>column dense</code>，表示&quot;先列后行&quot;，并且尽量填满空格。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">grid-auto-flow</span><span style="color:#A6ACCD;">: column dense;</span></span>
<span class="line"></span></code></pre></div><p><img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202206182151708.png" alt=""> 上图会先填满第一列，再填满第2列，所以3号项目在第一列，4号项目在第二列。8号项目和9号项目被挤到了第四列。</p><h3 id="justify-items-属性与align-items-属性与place-items-属性" tabindex="-1">Justify-items 属性与align-items 属性与place-items 属性 <a class="header-anchor" href="#justify-items-属性与align-items-属性与place-items-属性" aria-hidden="true">#</a></h3><p><code>justify-items</code>属性设置单元格内容的水平位置（左中右），<code>align-items</code>属性设置单元格内容的垂直位置（上中下）。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> start | end | center | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> start | end | center | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这两个属性的写法完全相同，都可以取下面这些值。</p><ul><li>start：对齐单元格的起始边缘。</li><li>end：对齐单元格的结束边缘。</li><li>center：单元格内部居中。</li><li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> start</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><a href="https://jsbin.com/gijeqej/edit?css,output" target="_blank" rel="noreferrer">上面代码</a>表示，单元格的内容左对齐，效果如下图。 <img src="https://raw.githubusercontent.com/Hbisedm/my-blob-picGo/main/img/202206182154419.png" alt=""></p><p><code>place-items</code>属性是<code>align-items</code>属性和<code>justify-items</code>属性的合并简写形式</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">place-items</span><span style="color:#A6ACCD;">: &lt;</span><span style="color:#FFCB6B;">align-items</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> &lt;</span><span style="color:#FFCB6B;">justify-items</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">place-items</span><span style="color:#A6ACCD;">: start end;</span></span>
<span class="line"></span></code></pre></div><p><strong>如果省略第二个值，则浏览器认为与第一个值相等。</strong></p><h3 id="justify-content-属性与align-content-属性与place-content-属性" tabindex="-1">Justify-content 属性与align-content 属性与place-content 属性 <a class="header-anchor" href="#justify-content-属性与align-content-属性与place-content-属性" aria-hidden="true">#</a></h3><p><code>justify-content</code>属性是整个内容区域在容器里面的水平位置（左中右），<code>align-content</code>属性是整个内容区域的垂直位置（上中下）。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> start | end | center | stretch | space-around | space-between | space-evenly</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> start | end | center | stretch | space-around | space-between | space-evenly</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这两个属性的写法完全相同，都可以取下面这些值。（下面的图都以<code>justify-content</code>属性为例，<code>align-content</code>属性的图完全一样，只是将水平方向改成垂直方向。）</p><ul><li>start - 对齐容器的起始边框。</li><li>end - 对齐容器的结束边框。</li><li>center - 容器内部居中。</li><li>stretch - 项目大小没有指定时，拉伸占据整个网格容器。</li><li>space-around - 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍。</li><li>space-between - 项目与项目的间隔相等，项目与容器边框之间没有间隔。</li><li>space-evenly - 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。</li></ul><p><code>place-content</code>属性是<code>align-content</code>属性和<code>justify-content</code>属性的合并简写形式。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">place-content</span><span style="color:#A6ACCD;">: &lt;</span><span style="color:#FFCB6B;">align-content</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> &lt;</span><span style="color:#FFCB6B;">justify-content</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>下面是一个例子。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">place-content</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">space-around</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">space-evenly</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div><p>如果省略第二个值，浏览器就会假定第二个值等于第一个值。</p><h3 id="grid-auto-columns-属性与grid-auto-rows-属性" tabindex="-1">Grid-auto-columns 属性与grid-auto-rows 属性 <a class="header-anchor" href="#grid-auto-columns-属性与grid-auto-rows-属性" aria-hidden="true">#</a></h3><p>有时候，一些项目的指定位置，在现有网格的外部。比如网格只有3列，但是某一个项目指定在第5行。这时，浏览器会自动生成多余的网格，以便放置项目。</p><p><code>grid-auto-columns</code>属性和<code>grid-auto-rows</code>属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与<code>grid-template-columns</code>和<code>grid-template-rows</code>完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。</p><h3 id="grid-template-属性与grid-属性" tabindex="-1">Grid-template 属性与grid 属性 <a class="header-anchor" href="#grid-template-属性与grid-属性" aria-hidden="true">#</a></h3><p><code>grid-template</code>属性是<code>grid-template-columns</code>、<code>grid-template-rows</code>和<code>grid-template-areas</code>这三个属性的合并简写形式。</p><p><code>grid</code>属性是<code>grid-template-rows</code>、<code>grid-template-columns</code>、<code>grid-template-areas</code>、 <code>grid-auto-rows</code>、<code>grid-auto-columns</code>、<code>grid-auto-flow</code>这六个属性的合并简写形式。</p><h2 id="项目属性" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性" aria-hidden="true">#</a></h2><h3 id="grid-column-start-属性与grid-column-end-属性与grid-row-start-属性与grid-row-end-属性" tabindex="-1">Grid-column-start 属性与grid-column-end 属性与grid-row-start 属性与grid-row-end 属性 <a class="header-anchor" href="#grid-column-start-属性与grid-column-end-属性与grid-row-start-属性与grid-row-end-属性" aria-hidden="true">#</a></h3><p>项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。</p><ul><li><code>grid-column-start</code>属性：左边框所在的垂直网格线</li><li><code>grid-column-end</code>属性：右边框所在的垂直网格线</li><li><code>grid-row-start</code>属性：上边框所在的水平网格线</li><li><code>grid-row-end</code>属性：下边框所在的水平网格线</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item-1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-column-start</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-column-end</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><a href="https://jsbin.com/yukobuf/edit?css,output" target="_blank" rel="noreferrer">上面代码</a>指定，1号项目的左边框是第二根垂直网格线，右边框是第四根垂直网格线。</p><p>这四个属性的值，除了指定为第几个网格线，还可以指定为<strong>网格线的名字</strong>。</p><h4 id="span关键字" tabindex="-1">span关键字 <a class="header-anchor" href="#span关键字" aria-hidden="true">#</a></h4><p>这四个属性的值还可以使用<code>span</code>关键字，表示&quot;跨越&quot;，即左右边框（上下边框）之间跨越多少个网格。</p><p>使用这四个属性，如果产生了项目的重叠，则使用<code>z-index</code>属性指定项目的重叠顺序。</p><h3 id="grid-column-属性与grid-row-属性" tabindex="-1">Grid-column 属性与grid-row 属性 <a class="header-anchor" href="#grid-column-属性与grid-row-属性" aria-hidden="true">#</a></h3><p><code>grid-column</code>属性是<code>grid-column-start</code>和<code>grid-column-end</code>的合并简写形式，<code>grid-row</code>属性是<code>grid-row-start</code>属性和<code>grid-row-end</code>的合并简写形式。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-column</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;start-line&gt; / &lt;end-line&gt;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;start-line&gt; / &lt;end-line&gt;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item-1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-column</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;">/* 等同于 */</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item-1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-column-start</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-column-end</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row-start</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row-end</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这两个属性之中，也可以使用<code>span</code>关键字，表示跨越多少个网格。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item-1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">b03532</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-column</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;">/* 等同于 */</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item-1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">b03532</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-column</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / span </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / span </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>斜杠以及后面的部分可以省略，<strong>默认跨越一个网格</strong>。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item-1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-column</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="grid-area-属性" tabindex="-1">Grid-area 属性 <a class="header-anchor" href="#grid-area-属性" aria-hidden="true">#</a></h3><p><code>grid-area</code>属性指定项目放在哪一个区域 [[#grid-template-areas 属性]]</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-rows</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-areas</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a b c</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                       </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">d e f</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                       </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">g h i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item-1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">grid-area</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> e</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>grid-area</code>属性还可用作<code>grid-row-start</code>、<code>grid-column-start</code>、<code>grid-row-end</code>、<code>grid-column-end</code>的合并简写形式，直接指定项目的位置。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-area</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item-1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-area</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="justify-self-属性与align-self-属性与place-self-属性" tabindex="-1">Justify-self 属性与align-self 属性与place-self 属性 <a class="header-anchor" href="#justify-self-属性与align-self-属性与place-self-属性" aria-hidden="true">#</a></h3><p><code>justify-self</code>属性设置单元格内容的水平位置（左中右），跟<code>justify-items</code>属性的用法完全一致，但只作用于单个项目。</p><p><code>align-self</code>属性设置单元格内容的垂直位置（上中下），跟<code>align-items</code>属性的用法完全一致，也是只作用于单个项目。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-self</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> start | end | center | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-self</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> start | end | center | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>start：对齐单元格的起始边缘。</li><li>end：对齐单元格的结束边缘。</li><li>center：单元格内部居中。</li><li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li></ul><p><code>place-self</code>属性是<code>align-self</code>属性和<code>justify-self</code>属性的合并简写形式。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">place-self</span><span style="color:#A6ACCD;">: &lt;</span><span style="color:#FFCB6B;">align-self</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> &lt;</span><span style="color:#FFCB6B;">justify-self</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">place-self</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">center</span><span style="color:#A6ACCD;"> center;</span></span>
<span class="line"></span></code></pre></div><p>如果省略第二个值，<code>place-self</code>属性会认为这两个值相等。</p><h2 id="理解" tabindex="-1">理解 <a class="header-anchor" href="#理解" aria-hidden="true">#</a></h2><p>容器 与 项目 两个概念 等于 父 与 子</p><p>容器的<code>justify-items 和 align-items</code> 设置<strong>项目内容</strong>的<code>水平与垂直</code>摆放方式 映射到项目就是<code>justify-self 和 align-self</code></p><p>容器的<code>justify-content 和 align-content</code> 指的是项目的摆放方式</p><p>容器的属性一般用于设置整体布局的排放 项目的属性一般用于当前项目的位置</p><p><code>column</code> 列 <code>row</code> 行</p><p>一般设置整体布局后再填充内容</p><p>flex 和 grid 的目的在于布局 layout</p>`,159),e=[o];function c(t,r,i,d,C,y){return n(),a("div",null,e)}const g=s(p,[["render",c]]);export{F as __pageData,g as default};
