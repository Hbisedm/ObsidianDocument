import{_ as e,c as t,o,d as a}from"./app.0b246d93.js";const m=JSON.parse('{"title":"官方定义","description":"","frontmatter":{"title":"官方定义","创建时间":"星期一, 八月 1日 2022, 12:30:07 凌晨","修改时间":"星期四, 八月 4日 2022, 11:46:21 中午"},"headers":[],"relativePath":"工作区/设计模式/依赖倒置原则.md"}'),n={name:"工作区/设计模式/依赖倒置原则.md"},s=a('<h1 id="官方定义" tabindex="-1">官方定义 <a class="header-anchor" href="#官方定义" aria-hidden="true">#</a></h1><p>依赖倒置原则，英文缩写<strong>DIP</strong>，全称Dependence Inversion Principle。</p><p>原始定义：High level modules should not depend upon low level modules. Both should depend upon abstractions. Abstractions should not depend upon details. Details should depend upon abstractions。</p><p>官方翻译：高层模块不应该依赖低层模块，两者都应该依赖其抽象；抽象不应该依赖细节，细节应该依赖抽象。</p><h1 id="理解" tabindex="-1">理解 <a class="header-anchor" href="#理解" aria-hidden="true">#</a></h1><ol><li>高层模块不应该直接依赖于底层模块的具体实现，而应该依赖于底层的抽象。</li><li>接口和抽象类不应该依赖于实现类，而实现类依赖接口或抽象类。</li></ol>',6),d=[s];function r(i,_,l,c,p,h){return o(),t("div",null,d)}const f=e(n,[["render",r]]);export{m as __pageData,f as default};
